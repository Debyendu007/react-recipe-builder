var garudapro=garudapro||{};garudapro.webapi=garudapro.webapi||{};garudapro.webapi.base=garudapro.webapi.base||{};garudapro.webapi.base.request=garudapro.webapi.base.request||{};garudapro.webapi.extended=garudapro.webapi.extended||{};garudapro.webapi.scylla=garudapro.webapi.scylla||{};garudapro.webapi.scylla.response=garudapro.webapi.scylla.response||{};garudapro.webapi.scylla.connnection=garudapro.webapi.scylla.connnection||{};garudapro.webapi.protocol=garudapro.webapi.protocol||{};
garudapro.webapi.common=garudapro.webapi.common||{};garudapro.webapi.version="1.1.0";garudapro.webapi.debug=true;garudapro.webapi.common.printLog=function(message){if(typeof garudapro.webapi.debug!==typeof undefined&&garudapro.webapi.debug==true)console.log("[Garuda-WEB-SDK]: "+message)};garudapro.webapi.protocol.header=function(header){this.id=header;this.version="2.0"};
garudapro.webapi.protocol.garudaRequestJSON=function(header,body){var garudaRequest={};var requestHeader=new garudapro.webapi.protocol.header(header);garudaRequest.header=requestHeader;garudaRequest.body=body;return garudaRequest};
garudapro.webapi.scylla.ScyllRequest=function(header,sourceGadgetName,sourceGadgetID,callback){var request={};var body={};body.sourceGadgetName=sourceGadgetName;body.sourceGadgetID=sourceGadgetID;request.callback=callback;return{add:function(param,value){body[param]=value},sendRequestToGateway:function(){var garudaRequest=new garudapro.webapi.protocol.garudaRequestJSON(header,body);var socket=garudapro.webapi.scylla.connnection.socket;garudapro.webapi.common.printLog("GARUDA REQUEST -> "+JSON.stringify(garudaRequest));
if(typeof socket!==typeof undefined)socket.emit("sendRequestToGateway",garudaRequest);else garudapro.webapi.common.printLog("Connection to Garuda Server not available!!")},getCallback:function(){return request.callback}}};garudapro.webapi.extended.sendLoginRequest=function(sourceGadgetName,sourceGadgetID,username,password){garudapro.webapi.common.printLog("Trying to call WebGadgetLoginRequest");var request=new garudapro.webapi.scylla.ScyllRequest("WebGadgetLoginRequest",sourceGadgetName,sourceGadgetID);request.add("username",username);request.add("password",password);request.sendRequestToGateway()};
garudapro.webapi.extended.sendLogoutRequest=function(sourceGadgetName,sourceGadgetID,user_id){garudapro.webapi.common.printLog("Trying to call sendLogoutRequest");var request=new garudapro.webapi.scylla.ScyllRequest("WebGadgetLogoutRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.sendRequestToGateway()};
garudapro.webapi.extended.getDeviceList=function(sourceGadgetName,sourceGadgetID,user_id){garudapro.webapi.common.printLog("Trying to call getDeviceList");var request=new garudapro.webapi.scylla.ScyllRequest("FetchDeviceListRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.sendRequestToGateway()};
garudapro.webapi.extended.sendSelectedDevice=function(sourceGadgetName,sourceGadgetID,user_id,device_id){garudapro.webapi.common.printLog("Trying to call sendSelectedDevice");var request=new garudapro.webapi.scylla.ScyllRequest("SendSelectedDeviceRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.sendRequestToGateway()};
garudapro.webapi.extended.checkUserAuthentication=function(sourceGadgetName,sourceGadgetID,user_id,authtoken){garudapro.webapi.common.printLog("Trying to call checkUserAuthentication");var request=new garudapro.webapi.scylla.ScyllRequest("checkUserAuthentication",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("authtoken",authtoken);request.sendRequestToGateway()};
garudapro.webapi.extended.GetGadgetDetailsRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id){garudapro.webapi.common.printLog("Trying to call GetGadgetDetailsRequest");var request=new garudapro.webapi.scylla.ScyllRequest("GetGadgetDetailsRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.sendRequestToGateway()};
garudapro.webapi.extended.DeleteGadgetFromCoreRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id,gadgetIDToDelete,forceDelete){garudapro.webapi.common.printLog("Trying to call DeleteGadgetFromCoreRequest");var request=new garudapro.webapi.scylla.ScyllRequest("DeleteGadgetFromCoreRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.add("gadgetIDToDelete",gadgetIDToDelete);request.add("forceDelete",forceDelete);request.sendRequestToGateway()};
garudapro.webapi.extended.DeleteCategoriesRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id,deletegadgetId,categories){garudapro.webapi.common.printLog("Trying to call DeleteCategoriesRequest");var request=new garudapro.webapi.scylla.ScyllRequest("DeleteCategoriesRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.add("categories",categories);request.add("deletegadgetId",deletegadgetId);request.sendRequestToGateway()};
garudapro.webapi.extended.LoadGadgetThroughCoreRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id,loadableGadgetID){garudapro.webapi.common.printLog("Trying to call LoadGadgetThroughCoreRequest");var request=new garudapro.webapi.scylla.ScyllRequest("LoadGadgetThroughCoreRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.add("loadableGadgetID",loadableGadgetID);request.sendRequestToGateway()};
garudapro.webapi.extended.AddCategoriesForGadgetRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id,targetGadgetName,targetGadgetID,categories){garudapro.webapi.common.printLog("Trying to call AddCategoriesForGadgetRequest");var request=new garudapro.webapi.scylla.ScyllRequest("AddCategoriesForGadgetRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.add("targetGadgetName",targetGadgetName);request.add("targetGadgetID",targetGadgetID);
request.add("categories",categories);request.sendRequestToGateway()};garudapro.webapi.extended.GetPipelineDetailsRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id){garudapro.webapi.common.printLog("Trying to call GetPipelineDetailsRequest");var request=new garudapro.webapi.scylla.ScyllRequest("GetPipelineDetailsRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.sendRequestToGateway()};
garudapro.webapi.extended.GetPipelineDetailsRequestFromGateway=function(sourceGadgetName,sourceGadgetID,user_id,pipeline_id){garudapro.webapi.common.printLog("Trying to call GetPipelineDetailsRequestFromGateway");var request=new garudapro.webapi.scylla.ScyllRequest("GetSinglePipelineDetailsRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("pipeline_id",pipeline_id);request.sendRequestToGateway()};
garudapro.webapi.extended.getDeviceStatus=function(sourceGadgetName,sourceGadgetID,user_id,device_id,targetDeviceID){garudapro.webapi.common.printLog("Trying to call getDeviceStatus");var request=new garudapro.webapi.scylla.ScyllRequest("GetDeviceStatusRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.add("targetDeviceID",targetDeviceID);request.sendRequestToGateway()};
garudapro.webapi.extended.DeletePipelineRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id,deletepipelinetId){garudapro.webapi.common.printLog("Trying to call DeletePipelineRequest");var request=new garudapro.webapi.scylla.ScyllRequest("DeletePipelineRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.add("deletepipelinetId",deletepipelinetId);request.sendRequestToGateway()};
garudapro.webapi.extended.SendRecipeDataToGadgetRequest=function(sourceGadgetID,sourceGadgetName,targetGadgetName,targetGadgetID,targetDeviceID,targetGadgetType,recipeID,data,isStream,filename,inputfileextension,inputfileformat,fileSequenceNo,parameters,user_id,device_id){garudapro.webapi.common.printLog("Trying to call SendRecipeDataToGadgetRequest");var request=new garudapro.webapi.scylla.ScyllRequest("SendRecipeDataToGadgetRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",
device_id);request.add("targetGadgetName",targetGadgetName);request.add("targetGadgetID",targetGadgetID);request.add("targetDeviceID",targetDeviceID);request.add("targetGadgetType",targetGadgetType);request.add("recipeID",recipeID);request.add("data",data);request.add("isStream",isStream);request.add("filename",filename);request.add("inputfileextension",inputfileextension);request.add("inputfileformat",inputfileformat);request.add("fileSequenceNo",fileSequenceNo);request.add("parameters",parameters);
request.sendRequestToGateway()};
garudapro.webapi.extended.SendRecipeOutputToRecipePlayer=function(sourceGadgetID,sourceGadgetName,targetGadgetName,targetGadgetID,recipeID,data,isStream,filename,inputfileextension,inputfileformat,fileSequenceNo,parameters,user_id){garudapro.webapi.common.printLog("Trying to call SendRecipeDataToGadgetRequest");var request=new garudapro.webapi.scylla.ScyllRequest("SendRecipeDataToGadgetRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("targetGadgetName",targetGadgetName);
request.add("targetGadgetID",targetGadgetID);request.add("recipeID",recipeID);request.add("data",data);request.add("isStream",isStream);request.add("filename",filename);request.add("inputfileextension",inputfileextension);request.add("inputfileformat",inputfileformat);request.add("fileSequenceNo",fileSequenceNo);request.add("parameters",parameters);request.sendRequestToGateway()};
garudapro.webapi.extended.SendRecipeDataToGadgetResponse=function(sourceGadgetID,sourceGadgetName,targetGadgetID,targetGadgetName,targetGadgetType,recipeID,user_id,targetDeviceID,fileSequenceNo,result){garudapro.webapi.common.printLog("Trying to call SendRecipeDataToGadgetResponse");var request=new garudapro.webapi.scylla.ScyllRequest("SendRecipeDataToGadgetResponse",sourceGadgetName,sourceGadgetID);request.add("recipeID",recipeID);request.add("uid",user_id);request.add("sourceGadgetID",sourceGadgetID);
request.add("sourceGadgetName",sourceGadgetName);request.add("device_id",targetDeviceID);request.add("targetDeviceID",targetDeviceID);request.add("targetGadgetID",targetGadgetID);request.add("targetGadgetName",targetGadgetName);request.add("targetGadgetType",targetGadgetType);request.add("fileSequenceNo",fileSequenceNo);request.add("result",result);request.sendRequestToGateway()};
garudapro.webapi.extended.SendRecipeInputACKToRecipePlayer=function(sourceGadgetID,sourceGadgetName,targetGadgetID,targetGadgetName,recipeID,user_id,fileSequenceNo,result){garudapro.webapi.common.printLog("Trying to call SendRecipeDataToGadgetResponse");var request=new garudapro.webapi.scylla.ScyllRequest("SendRecipeDataToGadgetResponse",sourceGadgetName,sourceGadgetID);request.add("recipeID",recipeID);request.add("uid",user_id);request.add("sourceGadgetID",sourceGadgetID);request.add("sourceGadgetName",
sourceGadgetName);request.add("targetGadgetID",targetGadgetID);request.add("targetGadgetName",targetGadgetName);request.add("fileSequenceNo",fileSequenceNo);request.add("result",result);request.sendRequestToGateway()};
garudapro.webapi.extended.downloadgadget=function(sourceGadgetName,sourceGadgetID,gadget_id,uid,device_id,os,authtoken){garudapro.webapi.common.printLog("Trying to call downloadgadget");var request=new garudapro.webapi.scylla.ScyllRequest("download_gadget",sourceGadgetName,sourceGadgetID);request.add("gadget_id",gadget_id);request.add("uid",uid);request.add("device_id",device_id);request.add("os",os);request.add("authtoken",authtoken);request.sendRequestToGateway()};
garudapro.webapi.extended.getWebGadgets=function(sourceGadgetId,sourceGadgetName,userId){garudapro.webapi.common.printLog("Trying to call getWebGadgets");var request=new garudapro.webapi.scylla.ScyllRequest("GetWebGadgetsRequest",sourceGadgetName,sourceGadgetId);request.add("uid",userId);request.sendRequestToGateway()};
garudapro.webapi.extended.deleteWebGadget=function(sourceGadgetId,sourceGadgetName,userId,downloadId,gadgetId){garudapro.webapi.common.printLog("Trying to call deleteWebGadget");var request=new garudapro.webapi.scylla.ScyllRequest("DeleteWebGadgetsRequest",sourceGadgetName,sourceGadgetId);request.add("uid",userId);request.add("download_id",downloadId);request.add("gadget_id",gadgetId);request.sendRequestToGateway()};garudapro.webapi.base.Activate=function(sourceGadgetName,sourceGadgetID,debug){garudapro.webapi.base.request.activate=new garudapro.webapi.scylla.ScyllRequest("ActivateGadgetRequest",sourceGadgetName,sourceGadgetID);if(typeof debug!==typeof undefined&&debug==true){garudapro.webapi.debug=true;garudapro.webapi.common.printLog("ENABLE WEB-SDK IN DEBUG mode");garudapro.webapi.base.request.activate.add("debug",true)}garudapro.webapi.common.printLog("Trying to call Activate");garudapro.webapi.base.request.activate.sendRequestToGateway()};
garudapro.webapi.base.getCompatibleGadgets=function(sourceGadgetName,sourceGadgetID,user_id,fileExtension,fileFormat){garudapro.webapi.common.printLog("Trying to fetch compatible gadgets");garudapro.webapi.base.request.getCompatibleGadgets=new garudapro.webapi.scylla.ScyllRequest("getCompatibleGadgetListRequest",sourceGadgetName,sourceGadgetID);garudapro.webapi.base.request.getCompatibleGadgets.add("uid",user_id);garudapro.webapi.base.request.getCompatibleGadgets.add("fileExtension",fileExtension);
garudapro.webapi.base.request.getCompatibleGadgets.add("fileFormat",fileFormat);garudapro.webapi.base.request.getCompatibleGadgets.sendRequestToGateway()};
garudapro.webapi.base.SendDataToGadgetRequest=function(sourceGadgetName,sourceGadgetID,targetGadgetName,targetGadgetID,data,isStream,filename,format,extension,sourceDeviceID,targetDeviceID,user_id){garudapro.webapi.common.printLog("Trying to call SendDataToGadgetRequest");var request=new garudapro.webapi.scylla.ScyllRequest("SendDataToGadgetRequest",sourceGadgetName,sourceGadgetID);request.add("targetGadgetName",targetGadgetName);request.add("targetGadgetID",targetGadgetID);request.add("data",data);
request.add("isStream",isStream);request.add("filename",filename);request.add("format",format);request.add("extension",extension);request.add("sourceDeviceID",sourceDeviceID);request.add("targetDeviceID",targetDeviceID);request.add("uid",user_id);request.sendRequestToGateway()};
garudapro.webapi.base.SendNotificationToCoreRequest=function(sourceGadgetName,sourceGadgetID,user_id,device_id,type,message){garudapro.webapi.common.printLog("Trying to call SendNotificationToCoreRequest");var request=new garudapro.webapi.scylla.ScyllRequest("SendNotificationToCoreRequest",sourceGadgetName,sourceGadgetID);request.add("uid",user_id);request.add("device_id",device_id);request.add("type",type);request.add("message",message);request.sendRequestToGateway()};
garudapro.webapi.base.LoadDataResponse=function(sourceGadgetName,sourceGadgetID,targetGadgetName,targetGadgetID,sourceDeviceID,targetDeviceID,result){garudapro.webapi.common.printLog("Trying to call LoadDataResponse");var request=new garudapro.webapi.scylla.ScyllRequest("LoadDataResponse",sourceGadgetName,sourceGadgetID);request.add("targetGadgetName",targetGadgetName);request.add("targetGadgetID",targetGadgetID);request.add("sourceDeviceID",sourceDeviceID);request.add("targetDeviceID",targetDeviceID);
request.add("result",result);request.sendRequestToGateway()};
garudapro.webapi.base.SendDataToGadgetResponse=function(sourceGadgetName,sourceGadgetID,targetGadgetName,targetGadgetID,sourceDeviceID,targetDeviceID,user_id,result){garudapro.webapi.common.printLog("Trying to call SendDataToGadgetResponse");var request=new garudapro.webapi.scylla.ScyllRequest("SendDataToGadgetResponse",sourceGadgetName,sourceGadgetID);request.add("targetGadgetName",targetGadgetName);request.add("targetGadgetID",targetGadgetID);request.add("sourceDeviceID",sourceDeviceID);request.add("targetDeviceID",
targetDeviceID);request.add("uid",user_id);request.add("device_id",sourceDeviceID);request.add("result",result);request.sendRequestToGateway()};garudapro.webapi.scylla.init=function(scheme,host,port){garudapro.webapi.scylla.connnection.scheme=scheme;garudapro.webapi.scylla.connnection.host=host;garudapro.webapi.scylla.connnection.port=port;garudapro.webapi.scylla.connnection.socket=io.connect(scheme+"://"+host+":"+port);garudapro.webapi.scylla.connnection.socket.on("connect",function(){garudapro.webapi.common.printLog("Connected to Garuda Server");garudapro.webapi.scylla.connnection.socket.on("MessageFromGateway",function(jsonResponseObject){garudapro.webapi.scylla.response.processMessageFromGateway(jsonResponseObject)});
garudapro.webapi.scylla.connnection.socket.on("disconnect",function(){garudapro.webapi.common.printLog("Disconnected from Garuda Server !!");handleErrorEvent("404")});garudapro.webapi.scylla.connnection.socket.on("error",function(){garudapro.webapi.common.printLog("Unable to connect to Garuda Server");handleErrorEvent("404")})})};garudapro.webapi.scylla.sendAuthMessage=function(socket){var authMessage={authToken:Config.gadgetID};garudapro.webapi.scylla.connnection.socket.emit("authenticate",authMessage)};
function handleErrorEvent(){garudapro.webapi.common.printLog("Inside Garuda Server ERROR handler !!")}
garudapro.webapi.scylla.response.processMessageFromGateway=function(jsonResponseObject){var header=jsonResponseObject.header.id;var responsecode=jsonResponseObject.body.result;handleResponseCode(responsecode,header);garudapro.webapi.common.printLog("************************************************");garudapro.webapi.common.printLog("RESPONSE HEADER :: "+header);garudapro.webapi.common.printLog("RESPONSE OBJECT :: "+JSON.stringify(jsonResponseObject));garudapro.webapi.common.printLog("************************************************");
if(header==="ScyllaResponse")handleNetworkConnectFailure(responsecode);else if(header==="ActivateGadgetResponse"){var message=jsonResponseObject;if(typeof garudapro.webapi.base.request.activate!==typeof undefined){var callback=garudapro.webapi.base.request.activate.getCallback();if(typeof callback==="function")callback(message);else handleActivateGadgetResponse(message)}}else if(header==="WebGadgetLoginResponse"||header==="LoginToGatewayResponse")if(responsecode==200)handleLoginSuccessResponse(jsonResponseObject);
else handleLoginFailResponse(jsonResponseObject);else if(header=="GetPipelineDetailsResponse"){var message=jsonResponseObject.body;handleGetPipelineDetailsResponse(message)}else if(header=="GetSinglePipelineDetailsResponse"){var message=jsonResponseObject.body;handleLoadDataRequestResponse(message)}else if(header=="GetCompatibleGadgetListResponse"){var message=jsonResponseObject.body;var callback="";try{callback=garudapro.webapi.base.request.getCompatibleGadgets.getCallback()}catch(e){}if(typeof callback===
"function")callback(message);else handleGetCompatibleGadgetListResponse(message)}else if(header=="SendDataToGadgetRequest"){var message=jsonResponseObject.body;handleSentDataToGadgetRequest(message)}else if(header=="SendDataToGadgetResponse"){var message=jsonResponseObject.body;handleSentDataToGadgetResponse(message)}else if(header=="WebGadgetLogoutResponse"||header=="LogoutResponse")handleLogoutResponse(jsonResponseObject);else if(header=="sendSelectedDeviceResponse")handleDeviceSelectResponse(jsonResponseObject);
else if(header=="FetchDeviceListResponse"){var device_details=jsonResponseObject.body.device_details;handleDeviceListResponse(device_details)}else if(header=="GetGadgetDetailsResponse"){var message=jsonResponseObject.body;handleGetGadgetDetailsResponse(message)}else if(header=="DeleteGadgetFromCoreResponse"){var message=jsonResponseObject.body;handleDeleteGadgetFromCoreResponse(message)}else if(header=="SendNotificationToGadgetRequest"){var message=jsonResponseObject.body;handleSendNotificationToGadget(message)}else if(header==
"LoadGadgetThroughCoreResponse"){var message=jsonResponseObject.body;handleLoadGadgetThroughCoreResponse(message)}else if(header=="AddCategoriesForGadgetResponse"){var message=jsonResponseObject.body;handleAddCategoriesResponse(message)}else if(header=="DeleteCategoriesResponse"){var message=jsonResponseObject.body;handleDeleteCategoriesResponse(message)}else if(header=="DeletePipelineResponse"){var message=jsonResponseObject.body;handleDeletePipelineResponse(message)}else if(header=="LoadDataRequest"){var message=
jsonResponseObject.body;handleLoadDataRequestResponse(message)}else if(header=="SendRecipeDataToGadgetResponse"){var message=jsonResponseObject.body;handleSendRecipeDataToGadgetResponse(message)}else if(header=="GetDeviceStatusResponse"){var message=jsonResponseObject.body;handleGetDeviceStatusResponse(message)}else if(header=="GetExtensionFormatMapResponse"){var message=jsonResponseObject.body;handleGetExtensionFormatMapResponse(message)}else if(header=="SendRecipeDataToGadgetRequest"){var message=
jsonResponseObject.body;handleSendRecipeDataToGadgetRequest(message)}else if(header=="getActionTagsResponse"){var message=jsonResponseObject.body;handleGetActionTagsResponse(message)}else if(header=="getDataTagsResponse"){var message=jsonResponseObject.body;handleGetDataTagsResponse(message)}else if(header=="SaveAddedReceivedFileResponse"){var message=jsonResponseObject.body;handleSaveAddedReceivedFileResponse(message)}else if(header=="GetAllAddedReceivedFilesResponse"){var message=jsonResponseObject.body;
handleGetAllAddedReceivedFilesResponse(message)}else if(header=="DeleteAddedReceivedFileResponse"){var message=jsonResponseObject.body;handleDeleteAddedReceivedFileResponse(message)}else if(header=="GetWebGadgetsResponse"){var message=jsonResponseObject.body;handlegetWebGadgetsResponse(message)}else if(header=="DeleteWebGadgetsResponse"){var message=jsonResponseObject.body;handleDeleteWebGadgetsResponse(message)}};function handleDeviceSelectResponse(jsonResponseObject){}
function handleLoadDataRequestResponse(jsonResponseObject){}function handleSendRecipeDataToGadgetResponse(jsonResponseObject){}function handleLoadGadgetThroughCoreResponse(jsonResponseObject){}function handleSendNotificationToGadget(jsonResponseObject){}function handleDeleteGadgetFromCoreResponse(jsonResponseObject){}function handleGetGadgetDetailsResponse(jsonResponseObject){}function handleClientConnection(jsonResponseObject){}function handleDeviceListResponse(jsonResponseObject){}
function handleActivateGadgetResponse(jsonResponseObject){}function handleLoginSuccessResponse(jsonResponseObject){}function handleLoginFailResponse(jsonResponseObject){}function handleSentDataToGadgetRequest(jsonResponseObject){}function handleSentDataToGadgetResponse(jsonResponseObject){}function handleGetCompatibleGadgetListResponse(jsonResponseObject){}function handleLogoutResponse(jsonResponseObject){}function handleAddCategoriesResponse(jsonResponseObject){}
function handleDeleteCategoriesResponse(jsonResponseObject){}function handleGetPipelineDetailsResponse(jsonResponseObject){}function handleDeletePipelineResponse(jsonResponseObject){}function handleGetDeviceStatusResponse(jsonResponseObject){}function handleGetExtensionFormatMapResponse(jsonResponseObject){}function handleNetworkConnectFailure(jsonResponseObject){}function handleResponseCode(responseCode,responseHeader){}function handleSendRecipeDataToGadgetRequest(jsonResponseObject){}
function handleGetActionTagsResponse(jsonResponseObject){}function handleGetDataTagsResponse(jsonResponseObject){}function handleSaveAddedReceivedFileResponse(jsonResponseObject){}function handleGetAllAddedReceivedFilesResponse(jsonResponseObject){}function handleDeleteAddedReceivedFileResponse(jsonResponseObject){}function handlegetWebGadgetsResponse(message){}function handleDeleteWebGadgetsResponse(message){};var NOTIFICATION_REFRESH_DASHBOARD=600;var NOTIFICATION_UPDATE_GADGET=601;var NOTIFICATION_CLOSE_GADGET=604;var NOTIFICATION_DOWNLOAD_START=607;var NOTIFICATION_DOWNLOAD_END=608;var NOTIFICATION_DOWNLOAD_FAIL=609;var NOTIFICATION_GADGET_STATUS=610;var NOTIFICATION_CORE_UPDATING=612;var NOTIFICATION_NEW_PIPELINE=614;var NOTIFICATION_GADGET_DETAILS_UPDATE=616;var NOTIFICATION_MULTIPLE_INSTANCE=699;var NOTIFICATION_REFRESH_GADGET_LIST=703;var NOTIFICATION_GADGET_UPDATE_CONFIRM=705;
var NOTIFICATION_CORE_UPDATE_CONFIRM=708;var NOTIFICATION_CORE_UPDATE_REQUEST=709;var NOTIFICATION_CORE_DETAILS=710;var NOTIFICATION_DEVICE_UPDATE=711;var NOTIFICATION_USER_NOT_LOGGEDIN_FROM_STORE=712;
